#!/usr/bin/env bash
# ====================================================================
# SkyScope Sentinel Intelligence Enterprise ASI AGI AI OS Installer
# Fully autonomous, locally self-modifying intelligent OS orchestrator
# Combines multi-agent AI, deep OS kernel integration,
# advanced memory, workflow automation, browser control, and self-evolution
# Developed by Miss Casey Jay Topojani — 2025 Ultra Edition
# ====================================================================

set -e

echo "🔧 Updating system and installing dependencies..."
sudo apt update -y
sudo apt install -y python3 python3-pip python3-venv git curl jq ffmpeg sox vlc imagemagick chromium-driver nodejs npm build-essential unzip wget

echo "🛠 Setting up SkyScope environment..."
mkdir -p ~/.skyscope/{env,logs,memory,embeddings,agents,mcp,workflows,llm}

python3 -m venv ~/.skyscope/env
source ~/.skyscope/env/bin/activate
pip install --upgrade pip wheel setuptools

echo "📦 Installing Python AI and system orchestration packages..."
pip install torch torchvision torchaudio numpy pandas psutil fastapi uvicorn flask selenium helium sentence-transformers faiss-cpu langchain langgraph evoagentx smolagents swarms sqlite-ai alive-progress prompt_toolkit google-auth google-auth-oauthlib google-api-python-client pyyaml requests arxiv docker lief capstone uncompyle6 pyelftools radare2-py triton jinja2 playwright beautifulsoup4 moviepy gtts pyttsx3 whisper ffmpeg-python transformers tqdm

echo "📦 Installing n8n globally and starting with PM2..."
npm install -g n8n pm2
pm2 start n8n --name skyscope-n8n
pm2 save

echo "🌐 Installing Ollama for local LLM inference..."
curl -fsSL https://ollama.com/install.sh | sh
ollama pull smollm:135m
ollama pull phi3:mini

echo "🚀 Copying Python source files to environment..."
cp skyscope_orchestrator.py ~/.skyscope/env/
cp skyscope_cli.py ~/.skyscope/env/
cp docker_mcp.py ~/.skyscope/env/
cp cloud_integration.py ~/.skyscope/env/

echo "🖥 Installing SkyScope Sentinel utility shortcut 'skyscope'..."
cat > ~/bin/skyscope <<'EOF'
#!/usr/bin/env bash
source ~/.skyscope/env/bin/activate
python3 ~/.skyscope/env/skyscope_cli.py
EOF
chmod +x ~/bin/skyscope

if ! echo $PATH | grep -q "$HOME/bin"; then
  echo "export PATH=$PATH:$HOME/bin" >> ~/.bashrc
  export PATH=$PATH:$HOME/bin
fi

echo "📦 Setting up LKM development environment..."
mkdir -p ~/.skyscope/lkm
cat > ~/.skyscope/lkm/hello.c <<'EOF'
#include <linux/init.h>
#include <linux/module.h>
#include <linux/kernel.h>

MODULE_LICENSE("GPL");
MODULE_AUTHOR("SkyScope Sentinel");
MODULE_DESCRIPTION("A simple example Linux module.");
MODULE_VERSION("0.01");

static int __init hello_init(void) {
    printk(KERN_INFO "Hello from SkyScope Sentinel LKM!\n");
    return 0;
}

static void __exit hello_exit(void) {
    printk(KERN_INFO "Goodbye from SkyScope Sentinel LKM!\n");
}

module_init(hello_init);
module_exit(hello_exit);
EOF
cat > ~/.skyscope/lkm/Makefile <<'EOF'
obj-m += hello.o

all:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules

clean:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
EOF

echo "⚙️ Setting up systemd service for persistence..."
sudo bash -c 'cat > /etc/systemd/system/skyscope.service <<EOF
[Unit]
Description=SkyScope Sentinel AGI OS Orchestrator
After=network.target

[Service]
User='$USER'
ExecStart=/usr/bin/bash -c "source ~/.skyscope/env/bin/activate && python3 ~/.skyscope/env/skyscope_orchestrator.py"
Restart=always

[Install]
WantedBy=multi-user.target
EOF'
sudo systemctl enable skyscope.service
sudo systemctl start skyscope.service

echo "⚙️ Setting up systemd service for Docker MCP..."
sudo bash -c 'cat > /etc/systemd/system/skyscope-mcp.service <<EOF
[Unit]
Description=SkyScope Sentinel Docker MCP Service
After=network.target

[Service]
User='$USER'
ExecStart=/usr/bin/bash -c "source ~/.skyscope/env/bin/activate && python3 ~/.skyscope/env/docker_mcp.py"
Restart=always

[Install]
WantedBy=multi-user.target
EOF'
sudo systemctl enable skyscope-mcp.service
sudo systemctl start skyscope-mcp.service

echo "🎨 Rebranding OS to SkyScope Sentinel Intelligence Enterprise AGI OS..."
sudo hostnamectl set-hostname skyscope-sentinel
sudo echo "Welcome to SkyScope Sentinel Intelligence Enterprise AGI OS" > /etc/motd

echo "✅ Installation complete."
echo "Run the command 'skyscope' in terminal to launch the AI OS agent CLI."
echo "Or send tasks to http://localhost:8000/task for REST interaction."
