#!/usr/bin/env bash
# ====================================================================
# SkyScope Omniversal Orchestrator Installer
# ====================================================================
# Author: Miss Casey Jay Topojani | 2025 Ultimate Local AGI
# Purpose:
# - Fully self-contained AI orchestration framework
# - Builds persistent vector + semantic memory internally
# - Self-generating tools, agents, MCP servers, and workflows
# - Supports browser automation, coding, OS configuration, n8n workflows
# ====================================================================

set -e

echo "ðŸ§­ Updating base system..."
sudo apt update -y && sudo apt install -y python3 python3-pip python3-venv git sqlite3 curl jq ffmpeg \
  sox vlc imagemagick chromium-driver nodejs npm unzip wget build-essential

# Directories
mkdir -p ~/.skyscope_unified/{env,logs,memory,embeddings,agents,workflows,mcp,llm}
python3 -m venv ~/.skyscope_unified/env
source ~/.skyscope_unified/env/bin/activate
pip install --upgrade pip wheel

# --- Install essential Python packages ---
pip install torch torchvision torchaudio numpy pandas requests psutil fastapi uvicorn flask selenium helium \
  sentence-transformers langchain langchain-core langgraph swarms evoagentx smolagents[toolkit] faiss-cpu \
  alive-progress prompt_toolkit google-auth google-auth-oauthlib google-api-python-client pyyaml arxiv docker \
  lief capstone uncompyle6 pyelftools radare2-py triton jinja2 playwright beautifulsoup4 moviepy gtts pyttsx3 \
  whisper ffmpeg-python transformers tqdm gitpython psutil

# --- Setup n8n ---
npm install -g n8n pm2
pm2 start "n8n" --name skyscope-n8n
pm2 save

echo "âœ… n8n running at http://localhost:5678"

# --- Install Ollama for LLM operations ---
curl -fsSL https://ollama.com/install.sh | sh
ollama pull smollm:135m
ollama pull phi3:mini

echo "ðŸš€ Copying Python source files to environment..."
cp memory.py ~/.skyscope_unified/env/
cp tools_os.py ~/.skyscope_unified/env/
cp tools_web.py ~/.skyscope_unified/env/
cp tools_cloud.py ~/.skyscope_unified/env/
cp tools_docker.py ~/.skyscope_unified/env/
cp tools_n8n.py ~/.skyscope_unified/env/
cp tools_creative.py ~/.skyscope_unified/env/
cp tools_macos.py ~/.skyscope_unified/env/
cp orchestrator.py ~/.skyscope_unified/env/
cp cli.py ~/.skyscope_unified/env/

echo "ðŸ–¥ Installing SkyScope Sentinel utility shortcut 'skyscope'..."
cat > ~/bin/skyscope <<'EOF'
#!/usr/bin/env bash
source ~/.skyscope_unified/env/bin/activate
python3 ~/.skyscope_unified/env/cli.py
EOF
chmod +x ~/bin/skyscope

if ! echo $PATH | grep -q "$HOME/bin"; then
  echo "export PATH=$PATH:$HOME/bin" >> ~/.bashrc
  export PATH=$PATH:$HOME/bin
fi

# --- Systemd service setup ---
sudo bash -c 'cat > /etc/systemd/system/skyscope-unified.service <<EOF
[Unit]
Description=SkyScope Unified AGI Core
After=network.target

[Service]
User='$USER'
ExecStart=/usr/bin/bash -c "source ~/.skyscope_unified/env/bin/activate && python3 ~/.skyscope_unified/env/orchestrator.py"
Restart=always

[Install]
WantedBy=multi-user.target
EOF'

sudo systemctl enable skyscope-unified.service
sudo systemctl start skyscope-unified.service

echo "ðŸŒŒ SkyScope Unified installed and live."
echo "ðŸ§  API: curl -X POST http://localhost:8000/task -d '{\"task\":\"develop new memory summarization tool\"}' -H 'Content-Type: application/json'"
echo "Run the command 'skyscope' in terminal to launch the AI OS agent CLI."
